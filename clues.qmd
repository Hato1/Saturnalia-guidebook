---
format: 
  html:
    page-layout: custom
    css: styles_noscroll.css
execute:
  echo: false
---
```{python}
from ipyleaflet import (
    Map,
    Marker,
    basemaps,
    basemap_to_tiles,
    projections,
    ImageOverlay,
    Icon,
    CircleMarker,
    Circle,
    FullScreenControl,
)
import ipywidgets as widgets

m = Map(
  crs=projections.Simple,
  center=(1450/2, 1932/2),
  zoom=-1,
  min_zoom=-5,
  attribution_control=False,
  scroll_wheel_zoom=True,
  zoom_snap=0.5,
)
m.clear_layers()
scale = 1 # 51.5/10
bounds = ((0/scale, 0/scale), (1932/scale, 1450/scale)[::-1])
image = ImageOverlay(
    url="map2.png",
    bounds=bounds
)

m.fit_bounds(bounds)

# m.layout.height = QUARTO_FIG_HEIGHT
control = FullScreenControl()
m.add_control(control)

m.add_layer(image)


clues = {}
with open("clues.txt") as f:
    for i, clue in enumerate(f.read().split("\n\n\n")):
        coord = f"{i % 14},{i // 14}"
        clue = clue.split("\n")
        clue[0] = "<b>" + clue[0] + "</b>"

        clues[coord] = "<br>".join(clue)

xpad = 69.5
ypad = 102
distance = 127.2
WIDTH = 14
HEIGHT = 11
for i in range(WIDTH):
    for j in range(HEIGHT):
        tooltip = widgets.HTML(
            # value=f"Row: {HEIGHT-j-1}, Col {i}",
            value=clues[f"{i},{HEIGHT - j - 1}"],
            # placeholder='Some HTML',
            # description=clues[f"{i},{j}"],
        )
        location = j*distance+ypad, i*distance+xpad
        # m.add_layer(Marker(icon=icon, location=(j+1, i+1)))
        circle_marker = Circle(location=location, radius=41)  # radius=int((20*6)/m.zoom))
        circle_marker.color = "transparent"
        circle_marker.fill_color = "transparent"
        circle_marker.title = f"{i}, {j}"
        circle_marker.popup = tooltip  # "The birthplace of R"

        m.add_layer(circle_marker)

# m.layout.width = "100%"
# m.layout.height = "100vh"
# m.layout.minheight = "100vh"
m.layout.height = "calc(100vh - 70px)"
m
```